!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var n=function(){function e(t,n){var r=t.data,o=t.handleCardClick,i=t.handleCardDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=r.name,this._link=r.link,this._likes=r.likes,this._userId=r.owner._id,this._handleCardClick=o,this._handleCardDelete=i,this._templateSelector=n}var n,r;return n=e,r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place").cloneNode(!0)}},{key:"_setEventListeners",value:function(e){var t=this;e.querySelector(".button_action_like").addEventListener("click",(function(e){e.target.classList.toggle("button_action_like--active")})),e.querySelector(".place__image").addEventListener("click",(function(){t._handleCardClick()}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".place__title").textContent=this._name,this._element.querySelector(".place__image").setAttribute("src",this._link),this._element.querySelector(".place__image").setAttribute("alt",this._name),this._setEventListeners(this._element),this._element}},{key:"_updateLikes",value:function(){this._element.querySelector(".like-elements__count").textContent=this._likes.length.toString()}},{key:"isOwner",value:function(e){return this._userId===e}}],r&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}(),r=n;function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==o(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(n.querySelectorAll(t.inputSelector)),this._buttonElement=n.querySelector(t.submitButtonSelector)}var t,n;return t=e,n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._buttonElement.classList.add(this._config.inactiveButtonClass):this._buttonElement.classList.remove(this._config.inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners(),this._toggleButtonState()}}],n&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),a=u;function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._form=document.querySelector(".form"),this._handlerOnEsc=this._handleEscClose.bind(this),this._handlerSupClose=this._handleSuperClose.bind(this)}var t,n;return t=e,n=[{key:"open",value:function(){this._form.classList.add("form_mode_active"),this.setEventListeners()}},{key:"close",value:function(){this._form.classList.remove("form_mode_active"),this._removeListeners()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleSuperClose",value:function(e){this._popup.contains(e.target)||this.close()}},{key:"_removeListeners",value:function(){document.removeEventListener("keydown",this._handlerOnEsc),this._form.removeEventListener("click",this._handlerSupClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".button_action_close").addEventListener("click",(function(){e.close()})),this._form.addEventListener("click",this._handlerSupClose),document.addEventListener("keydown",this._handlerOnEsc)}}],n&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),f=s;function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==p(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===p(o)?o:String(o)),r)}var o}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function v(e,t){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},v(e,t)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function b(e){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},b(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=b(r);if(o){var n=b(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return h(e)}(this,e)});function u(e,t){var n,r=e.submitCallback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._submitCallback=r,n._submitButton=n._popup.querySelector(".button_action_create"),n._handlerSubmit=n._handleSubmit.bind(h(n)),n._handlerSubmitOnEnter=n._hanldeSubmitOnEnter.bind(h(n)),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e={};return this._popup.querySelectorAll(".form__input").forEach((function(t){e[t.name]=t.value})),e}},{key:"_reset",value:function(){this._popup.querySelectorAll(".form__input").forEach((function(e){e.value=""}))}},{key:"open",value:function(){m(b(u.prototype),"open",this).call(this),this.setEventListeners(),this._popup.classList.add("form__set_mode_active")}},{key:"close",value:function(){m(b(u.prototype),"close",this).call(this),this._removeListeners(),this._popup.classList.remove("form__set_mode_active"),this._reset()}},{key:"_handleSubmit",value:function(e){e.preventDefault(),this._submitCallback()}},{key:"_hanldeSubmitOnEnter",value:function(e){"Enter"===e.key&&(e.preventDefault(),this._submitButton.classList.contains("button_action_create-inactive")||this._submitCallback())}},{key:"setEventListeners",value:function(){m(b(u.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",this._handlerSubmit),document.addEventListener("keydown",this._handlerSubmitOnEnter)}},{key:"_removeListeners",value:function(){m(b(u.prototype),"_removeListeners",this).call(this),this._popup.removeEventListener("submit",this._handlerSubmit),document.removeEventListener("keydown",this._handlerSubmitOnEnter)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(f),_=d;function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==S(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===S(o)?o:String(o)),r)}var o}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._image=t._popup.querySelector(".popup__image"),t._title=t._popup.querySelector(".popup__title"),t}return t=u,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;k(E(u.prototype),"open",this).call(this),this._popup.classList.add("popup_mode_active"),this._image.src=n,this._title.textContent=t,this._image.alt=n}},{key:"close",value:function(){k(E(u.prototype),"close",this).call(this),this._popup.classList.remove("popup_mode_active")}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(f),j=C;function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var L=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,n=[{key:"rendererItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}],n&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),q=L;function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var R=function(){function e(t){var n=t.nameSelector,r=t.employmentSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._employmentElement=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,employment:this._employmentElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._employmentElement.textContent=n}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==B(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==B(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===B(o)?o:String(o)),r)}var o}var D=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getUserData",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:n})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:n})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x="#place-template",V=document.querySelector("#profile"),A=document.querySelector("#image"),N=document.querySelector("#name-input"),J=document.querySelector("#employment-input"),z=document.querySelector(".button_action_edit"),H=document.querySelector(".button_action_add"),M=document.querySelector("#submit-profile"),F=document.querySelector("#submit-image"),G=new j(".popup"),K=new R({nameSelector:".profile__username",employmentSelector:".profile__useremployment"}),Q=new D({baseUrl:"https://around.nomoreparties.co/v1/web_es_09",headers:{authorization:"e0d01e4f-01c5-4081-b9ff-c482a3e73038","Content-Type":"application/json"}});Q.getUserData().then((function(e){console.log(e),K.setUserInfo(e)})).catch((function(e){console.log(e)}));var W=new q({renderer:function(e){var t=new r({data:e,handleCardClick:function(){G.open(e)},handleCardDelete:function(){Q.getUserData().then((function(e){var n=e._id;console.log(n),undefined._isOwner(n)&&t.querySelector(".button_action_trash").addEventListener("click",(function(){t.remove()}))}))}},x),n=t.generateCard();W.addItem(n)}},".places");Q.getInitialCards().then((function(e){console.log(e),W.rendererItems(e)})).catch((function(e){console.log(e)}));var X=new _({submitCallback:function(){var e=X._getInputValues();Q.updateUserInfo(e).then((function(e){K.setUserInfo(e),X.close(),console.log(e)})).catch((function(e){console.log(e)}))}},"#profile"),Y=new _({submitCallback:function(){var e=Y._getInputValues();console.log(e),Q.addCard(e).then((function(e){var t=new r({data:e,handleCardClick:function(){G.open(e)}},x).generateCard();W.addItem(t),Y.close()})).catch((function(e){console.log(e)}))}},"#image"),Z=new a({formSelector:".form__set",inputSelector:".form__input",submitButtonSelector:"#submit-profile",inactiveButtonClass:"button_action_create-inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"},V),$=new a({formSelector:".form__set",inputSelector:".form__input",submitButtonSelector:"#submit-image",inactiveButtonClass:"button_action_create-inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"},A);z.addEventListener("click",(function(){var e=K.getUserInfo();N.value=e.name,J.value=e.employment,Z.enableValidation(),X.open()})),H.addEventListener("click",(function(){Y.open(),$.enableValidation()})),M.addEventListener("click",(function(e){e.preventDefault(),X._submitCallback()})),F.addEventListener("click",(function(e){e.preventDefault(),Y._submitCallback()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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eUJBQ2pCQyxXQUFZLDRCQzBHb0RzRixHQUU1RHdDLEVBQXFCLElBQUlqSixFRHpHUCxDQUN0QmdKLGFBQWMsYUFDZHZJLGNBQWUsZUFDZkUscUJBQXNCLGdCQUN0QmlCLG9CQUFxQixnQ0FDckJWLGdCQUFpQix5QkFDakJDLFdBQVksNEJDbUdnRHVGLEdBRzlERyxFQUFXMUgsaUJBQWlCLFNBQVMsV0FDbkMsSUFBTStKLEVBQWtCaEMsRUFBU2lDLGNBQ2pDeEMsRUFBVS9ILE1BQVFzSyxFQUFnQmxMLEtBQ2xDNEksRUFBZ0JoSSxNQUFRc0ssRUFBZ0I3RCxXQUN4QzBELEVBQXFCSyxtQkFDckJmLEVBQWtCVCxNQUNwQixJQUVBZCxFQUFVM0gsaUJBQWlCLFNBQVMsV0FDbEN1SixFQUFrQmQsT0FDbEJxQixFQUFtQkcsa0JBQ3JCLElBR0FyQyxFQUFvQjVILGlCQUFpQixTQUFTLFNBQUNDLEdBQzdDQSxFQUFJNkUsaUJBQ0pvRSxFQUFrQmpGLGlCQUNwQixJQUVBNEQsRUFBa0I3SCxpQkFBaUIsU0FBUyxTQUFDQyxHQUMzQ0EsRUFBSTZFLGlCQUNKeUUsRUFBa0J0RixpQkFDcEIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3Rvcih7IGRhdGEsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlQ2FyZERlbGV0ZSB9LCB0ZW1wbGF0ZVNlbGVjdG9yKSB7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgICB0aGlzLl91c2VySWQgPSBkYXRhLm93bmVyLl9pZDtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlQ2FyZERlbGV0ZSA9IGhhbmRsZUNhcmREZWxldGU7XG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VcIikuY2xvbmVOb2RlKHRydWUpO1xuICAgIHJldHVybiBjYXJkVGVtcGxhdGU7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoY2FyZEVsZW1lbnQpIHtcbiAgICBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbl9hY3Rpb25fbGlrZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKFwiYnV0dG9uX2FjdGlvbl9saWtlLS1hY3RpdmVcIik7XG4gICAgfSlcblxuICAgIC8qY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b25fYWN0aW9uX3RyYXNoXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBjYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICB9KSovXG4gICAgY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9faW1hZ2VcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljaygpO1xuICAgIH0pXG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG5cbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX3RpdGxlXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2ltYWdlXCIpLnNldEF0dHJpYnV0ZShcInNyY1wiLCB0aGlzLl9saW5rKTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2ltYWdlXCIpLnNldEF0dHJpYnV0ZShcImFsdFwiLCB0aGlzLl9uYW1lKTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKHRoaXMuX2VsZW1lbnQpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuICBfdXBkYXRlTGlrZXMoKSB7XG4gICAgY29uc3QgbGlrZUNvdW50RWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5saWtlLWVsZW1lbnRzX19jb3VudFwiKTtcbiAgICBsaWtlQ291bnRFbGVtZW50LnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoLnRvU3RyaW5nKCk7XG4gIH1cblxuICBpc093bmVyKHVzZXJJZCkge1xuICAgIHJldHVybiB0aGlzLl91c2VySWQgPT09IHVzZXJJZDtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FyZDsiLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5pbnB1dFNlbGVjdG9yKSk7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcihjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBpZighaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjsiLCJjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybVwiKTtcclxuICAgIHRoaXMuX2hhbmRsZXJPbkVzYyA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLl9oYW5kbGVyU3VwQ2xvc2UgPSB0aGlzLl9oYW5kbGVTdXBlckNsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fZm9ybS5jbGFzc0xpc3QuYWRkKFwiZm9ybV9tb2RlX2FjdGl2ZVwiKTtcclxuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fZm9ybS5jbGFzc0xpc3QucmVtb3ZlKFwiZm9ybV9tb2RlX2FjdGl2ZVwiKTtcclxuICAgIHRoaXMuX3JlbW92ZUxpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xyXG4gICAgaWYoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2hhbmRsZVN1cGVyQ2xvc2UoZXZ0KSB7XHJcbiAgICBpZighdGhpcy5fcG9wdXAuY29udGFpbnMoZXZ0LnRhcmdldCkpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3JlbW92ZUxpc3RlbmVycygpIHtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZXJPbkVzYyk7XHJcbiAgICB0aGlzLl9mb3JtLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVyU3VwQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbl9hY3Rpb25fY2xvc2VcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZXJTdXBDbG9zZSk7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVyT25Fc2MpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG9wdXA7IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgc3VibWl0Q2FsbGJhY2sgfSwgcG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9zdWJtaXRDYWxsYmFjayA9IHN1Ym1pdENhbGxiYWNrO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5idXR0b25fYWN0aW9uX2NyZWF0ZVwiKTtcclxuICAgIHRoaXMuX2hhbmRsZXJTdWJtaXQgPSB0aGlzLl9oYW5kbGVTdWJtaXQuYmluZCh0aGlzKTtcclxuICAgIHRoaXMuX2hhbmRsZXJTdWJtaXRPbkVudGVyID0gdGhpcy5faGFubGRlU3VibWl0T25FbnRlci5iaW5kKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgIGNvbnN0IGlucHV0RWxlbWVudHMgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1fX2lucHV0XCIpO1xyXG5cclxuICAgIGlucHV0RWxlbWVudHMuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBfcmVzZXQoKSB7XHJcbiAgICBjb25zdCBpbnB1dEVsZW1lbnRzID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvckFsbChcIi5mb3JtX19pbnB1dFwiKTtcclxuICAgIGlucHV0RWxlbWVudHMuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIGlucHV0LnZhbHVlID0gXCJcIjtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJmb3JtX19zZXRfbW9kZV9hY3RpdmVcIik7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9yZW1vdmVMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJmb3JtX19zZXRfbW9kZV9hY3RpdmVcIik7XHJcbiAgICB0aGlzLl9yZXNldCgpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZVN1Ym1pdChldnQpIHtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgdGhpcy5fc3VibWl0Q2FsbGJhY2soKTtcclxuICB9XHJcblxyXG4gIF9oYW5sZGVTdWJtaXRPbkVudGVyKGV2dCkge1xyXG4gICAgaWYoZXZ0LmtleSA9PT0gXCJFbnRlclwiKSB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZighdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5jb250YWlucyhcImJ1dHRvbl9hY3Rpb25fY3JlYXRlLWluYWN0aXZlXCIpKSB7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0Q2FsbGJhY2soKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLl9oYW5kbGVyU3VibWl0KTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZXJTdWJtaXRPbkVudGVyKTtcclxuICB9XHJcblxyXG4gIF9yZW1vdmVMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5fcmVtb3ZlTGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9wb3B1cC5yZW1vdmVFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuX2hhbmRsZXJTdWJtaXQpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlclN1Ym1pdE9uRW50ZXIpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoRm9ybTsiLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZVwiKTtcclxuICAgIHRoaXMuX3RpdGxlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fdGl0bGVcIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKHsgbmFtZSwgbGlua30pIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9tb2RlX2FjdGl2ZVwiKTtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl90aXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBsaW5rO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX21vZGVfYWN0aXZlXCIpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoSW1hZ2U7IiwiY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgLy90aGlzLml0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICAvL03DqXRvZG8gcMO6YmxpY28gcXVlIHJlbmRlcml6YSB0b2RvcyBsb3MgZWxlbWVudG9zIGRlIGxhIHDDoWdpbmFcclxuICByZW5kZXJlckl0ZW1zKGl0ZW1zKSB7XHJcbiAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZWN0aW9uOyIsImNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgZW1wbG95bWVudFNlbGVjdG9yIH0pIHtcclxuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fZW1wbG95bWVudEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVtcGxveW1lbnRTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIGNvbnN0IG5hbWUgPSB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudDtcclxuICAgIGNvbnN0IGVtcGxveW1lbnQgPSB0aGlzLl9lbXBsb3ltZW50RWxlbWVudC50ZXh0Q29udGVudDtcclxuICAgIHJldHVybiB7IG5hbWUsIGVtcGxveW1lbnQgfTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKCB7bmFtZSwgYWJvdXR9ICkge1xyXG4gICAgdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgdGhpcy5fZW1wbG95bWVudEVsZW1lbnQudGV4dENvbnRlbnQgPSBhYm91dDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFVzZXJJbmZvOyIsImNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICB0aGlzLmJhc2VVcmwgPSBvcHRpb25zLmJhc2VVcmw7XG4gICAgdGhpcy5oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzXG4gICAgfSlcbiAgICAudGhlbihyZXMgPT4ge1xuICAgICAgaWYocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pXG4gIH1cblxuICBnZXRVc2VyRGF0YSgpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1xuICAgIH0pXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIGlmKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KVxuICB9XG5cbiAgdXBkYXRlVXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgYWJvdXQgfSlcbiAgICB9KVxuICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICBpZihyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSlcbiAgfVxuXG4gIGFkZENhcmQoeyBuYW1lLCBsaW5rIH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG5hbWUsIGxpbmsgfSlcbiAgICB9KVxuICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICBpZihyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KVxuICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBpOyIsImNvbnN0IGNhcmRUZW1wbGF0ZVNlbGVjdG9yID0gXCIjcGxhY2UtdGVtcGxhdGVcIjtcclxuY29uc3QgcHJvZmlsZUZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlXCIpO1xyXG5jb25zdCBpbWFnZUZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbWFnZVwiKTtcclxuY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuYW1lLWlucHV0XCIpO1xyXG5jb25zdCBlbXBsb3ltZW50SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VtcGxveW1lbnQtaW5wdXRcIik7XHJcbmNvbnN0IGJ1dHRvbkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbl9hY3Rpb25fZWRpdFwiKTtcclxuY29uc3QgYnV0dG9uQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b25fYWN0aW9uX2FkZFwiKTtcclxuY29uc3Qgc3VibWl0QnV0dG9uUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXQtcHJvZmlsZScpO1xyXG5jb25zdCBzdWJtaXRCdXR0b25JbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXQtaW1hZ2UnKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVGb3JtQ29uZmlnID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogXCIuZm9ybV9fc2V0XCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIuZm9ybV9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIjc3VibWl0LXByb2ZpbGVcIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImJ1dHRvbl9hY3Rpb25fY3JlYXRlLWluYWN0aXZlXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcImZvcm1fX2lucHV0X3R5cGUtZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcImZvcm1fX2lucHV0LWVycm9yX2FjdGl2ZVwiXHJcbn07XHJcblxyXG5jb25zdCBpbWFnZUZvcm1Db25maWcgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5mb3JtX19zZXRcIixcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIiNzdWJtaXQtaW1hZ2VcIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImJ1dHRvbl9hY3Rpb25fY3JlYXRlLWluYWN0aXZlXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcImZvcm1fX2lucHV0X3R5cGUtZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcImZvcm1fX2lucHV0LWVycm9yX2FjdGl2ZVwiXHJcbn07XHJcblxyXG5leHBvcnQgeyBjYXJkVGVtcGxhdGVTZWxlY3RvciwgaW1hZ2VGb3JtRWxlbWVudCAsIGJ1dHRvbkVkaXQsIGJ1dHRvbkFkZCwgc3VibWl0QnV0dG9uUHJvZmlsZSxcclxuc3VibWl0QnV0dG9uSW1hZ2UsIG5hbWVJbnB1dCwgZW1wbG95bWVudElucHV0ICwgcHJvZmlsZUZvcm1Db25maWcsIGltYWdlRm9ybUNvbmZpZywgcHJvZmlsZUZvcm1FbGVtZW50IH07IiwiLy9pbXBvcnRhY2lvbiBkZSBjc3NcbmltcG9ydCBcIi4vcGFnZXMvaW5kZXguY3NzXCI7XG5cbi8vaW1wb3J0YWNpb24gZGUgY2xhc2VzXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuXG4vL2ltcG9ydGFjaW9uIGRlIGNvbnN0YW50ZXNcbmltcG9ydCB7IGJ1dHRvbkFkZCwgYnV0dG9uRWRpdCwgY2FyZFRlbXBsYXRlU2VsZWN0b3IsIGVtcGxveW1lbnRJbnB1dCwgaW1hZ2VGb3JtQ29uZmlnLCBpbWFnZUZvcm1FbGVtZW50LCBuYW1lSW5wdXQsXG4gIHByb2ZpbGVGb3JtQ29uZmlnLCBwcm9maWxlRm9ybUVsZW1lbnQsIHN1Ym1pdEJ1dHRvbkltYWdlLFxuICBzdWJtaXRCdXR0b25Qcm9maWxlIH0gZnJvbSBcIi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5cbi8vY3JlYWNpb24gZGUgaW5zdGFuY2lhc1xuXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIi5wb3B1cFwiKTtcblxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oeyBuYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3VzZXJuYW1lXCIsIGVtcGxveW1lbnRTZWxlY3RvcjogXCIucHJvZmlsZV9fdXNlcmVtcGxveW1lbnRcIiB9KTtcblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS93ZWJfZXNfMDlcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiZTBkMDFlNGYtMDFjNS00MDgxLWI5ZmYtYzQ4MmEzZTczMDM4XCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfVxufSk7XG5cbmFwaS5nZXRVc2VyRGF0YSgpXG4udGhlbihkYXRhID0+IHtcbiAgY29uc29sZS5sb2coZGF0YSk7XG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGRhdGEpO1xufSlcbi5jYXRjaChlcnIgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIpO1xufSlcblxuY29uc3QgaW5pdGlhbENhcmRMaXN0ID0gbmV3IFNlY3Rpb24oe1xuICByZW5kZXJlcjogKGl0ZW0pID0+IHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IG5ldyBDYXJkKHtcbiAgICAgIGRhdGE6IGl0ZW0sXG4gICAgICBoYW5kbGVDYXJkQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgcG9wdXBXaXRoSW1hZ2Uub3BlbihpdGVtKTtcbiAgICAgIH1cbiAgICAgICwgaGFuZGxlQ2FyZERlbGV0ZTogKCkgPT4ge1xuICAgICAgICBhcGkuZ2V0VXNlckRhdGEoKVxuICAgICAgICAudGhlbih1c2VyRGF0YSA9PiB7XG4gICAgICAgICAgY29uc3QgdXNlcklkID0gdXNlckRhdGEuX2lkO1xuICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJJZCk7XG5cbiAgICAgICAgICBpZih0aGlzLl9pc093bmVyKHVzZXJJZCkpIHtcbiAgICAgICAgICAgIGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnV0dG9uX2FjdGlvbl90cmFzaFwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICBjYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH1cbiAgICAsIGNhcmRUZW1wbGF0ZVNlbGVjdG9yKTtcbiAgICBjb25zdCBjYXJkID0gY2FyZEVsZW1lbnQuZ2VuZXJhdGVDYXJkKCk7XG4gICAgaW5pdGlhbENhcmRMaXN0LmFkZEl0ZW0oY2FyZCk7XG4gIH1cbn1cbiwgXCIucGxhY2VzXCIpO1xuXG5hcGkuZ2V0SW5pdGlhbENhcmRzKClcbi50aGVuKGNhcmRzID0+IHtcbiAgY29uc29sZS5sb2coY2FyZHMpO1xuXG4gIGluaXRpYWxDYXJkTGlzdC5yZW5kZXJlckl0ZW1zKGNhcmRzKTtcbn0pXG4uY2F0Y2goZXJyID0+IHtcbiAgY29uc29sZS5sb2coZXJyKTtcbn0pO1xuXG5jb25zdCBwb3B1cFdpdGhVc2VySW5mbyA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgc3VibWl0Q2FsbGJhY2s6ICgpID0+IHtcbiAgICBjb25zdCBmb3JtRGF0YSA9IHBvcHVwV2l0aFVzZXJJbmZvLl9nZXRJbnB1dFZhbHVlcygpO1xuXG4gICAgYXBpLnVwZGF0ZVVzZXJJbmZvKGZvcm1EYXRhKVxuICAgIC50aGVuKHVwZGF0ZVVzZXJEYXRhID0+IHtcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHVwZGF0ZVVzZXJEYXRhKTtcbiAgICAgIHBvcHVwV2l0aFVzZXJJbmZvLmNsb3NlKCk7XG4gICAgICBjb25zb2xlLmxvZyh1cGRhdGVVc2VyRGF0YSk7XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSlcbiAgfVxufVxuLCBcIiNwcm9maWxlXCJcbik7XG5cbmNvbnN0IHBvcHVwV2l0aENhcmRJbmZvID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBzdWJtaXRDYWxsYmFjazogKCkgPT4ge1xuICAgIGNvbnN0IGNhcmREYXRhID0gcG9wdXBXaXRoQ2FyZEluZm8uX2dldElucHV0VmFsdWVzKCk7XG4gICAgY29uc29sZS5sb2coY2FyZERhdGEpO1xuXG4gICAgYXBpLmFkZENhcmQoY2FyZERhdGEpXG4gICAgLnRoZW4obmV3Q2FyZERhdGEgPT4ge1xuICAgICAgY29uc3QgbmV3Q2FyZEVsZW1lbnQgPSBuZXcgQ2FyZCh7XG4gICAgICAgIGRhdGE6IG5ld0NhcmREYXRhLFxuICAgICAgICBoYW5kbGVDYXJkQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICBwb3B1cFdpdGhJbWFnZS5vcGVuKG5ld0NhcmREYXRhKTtcbiAgICAgICAgfVxuICAgICAgfSwgY2FyZFRlbXBsYXRlU2VsZWN0b3IpO1xuXG4gICAgICBjb25zdCBuZXdDYXJkID0gbmV3Q2FyZEVsZW1lbnQuZ2VuZXJhdGVDYXJkKCk7XG4gICAgICBpbml0aWFsQ2FyZExpc3QuYWRkSXRlbShuZXdDYXJkKTtcbiAgICAgIHBvcHVwV2l0aENhcmRJbmZvLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSlcbiAgfVxufVxuLCBcIiNpbWFnZVwiXG4pO1xuXG5jb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHByb2ZpbGVGb3JtQ29uZmlnLCBwcm9maWxlRm9ybUVsZW1lbnQpO1xuXG5jb25zdCBpbWFnZUZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihpbWFnZUZvcm1Db25maWcsIGltYWdlRm9ybUVsZW1lbnQpO1xuXG4vL2NvbnRyb2xhZG9yZXMgZGUgZXZlbnRvcyBwYXJhIGFicmlyIHBvcHVwc1xuYnV0dG9uRWRpdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBjb25zdCBjdXJyZW50VXNlckluZm8gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBuYW1lSW5wdXQudmFsdWUgPSBjdXJyZW50VXNlckluZm8ubmFtZTtcbiAgZW1wbG95bWVudElucHV0LnZhbHVlID0gY3VycmVudFVzZXJJbmZvLmVtcGxveW1lbnQ7XG4gIHByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbiAgcG9wdXBXaXRoVXNlckluZm8ub3BlbigpO1xufSk7XG5cbmJ1dHRvbkFkZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBwb3B1cFdpdGhDYXJkSW5mby5vcGVuKCk7XG4gIGltYWdlRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG59KTtcblxuLy9jb250cm9sYWRvcmVzIHBhcmEgYm90b25lcyBzdWJtaXRcbnN1Ym1pdEJ1dHRvblByb2ZpbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gIHBvcHVwV2l0aFVzZXJJbmZvLl9zdWJtaXRDYWxsYmFjaygpO1xufSk7XG5cbnN1Ym1pdEJ1dHRvbkltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICBwb3B1cFdpdGhDYXJkSW5mby5fc3VibWl0Q2FsbGJhY2soKTtcbn0pOyJdLCJuYW1lcyI6WyJDYXJkIiwiX3JlZiIsInRlbXBsYXRlU2VsZWN0b3IiLCJkYXRhIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlQ2FyZERlbGV0ZSIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfbGlrZXMiLCJsaWtlcyIsIl91c2VySWQiLCJvd25lciIsIl9pZCIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlQ2FyZERlbGV0ZSIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwia2V5IiwidmFsdWUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiY2FyZEVsZW1lbnQiLCJfdGhpcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsInRleHRDb250ZW50Iiwic2V0QXR0cmlidXRlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwibGVuZ3RoIiwidG9TdHJpbmciLCJ1c2VySWQiLCJGb3JtVmFsaWRhdG9yIiwiY29uZmlnIiwiZm9ybUVsZW1lbnQiLCJfY29uZmlnIiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX2J1dHRvbkVsZW1lbnQiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImNvbmNhdCIsImlkIiwiYWRkIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInJlbW92ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInNvbWUiLCJfaGFzSW52YWxpZElucHV0IiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2Zvcm0iLCJfaGFuZGxlck9uRXNjIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsIl9oYW5kbGVyU3VwQ2xvc2UiLCJfaGFuZGxlU3VwZXJDbG9zZSIsInNldEV2ZW50TGlzdGVuZXJzIiwiX3JlbW92ZUxpc3RlbmVycyIsImNsb3NlIiwiY29udGFpbnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUG9wdXBXaXRoRm9ybSIsIl9Qb3B1cCIsIl9pbmhlcml0cyIsIl9zdXBlciIsInN1Ym1pdENhbGxiYWNrIiwiY2FsbCIsIl9zdWJtaXRDYWxsYmFjayIsIl9zdWJtaXRCdXR0b24iLCJfaGFuZGxlclN1Ym1pdCIsIl9oYW5kbGVTdWJtaXQiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiX2hhbmRsZXJTdWJtaXRPbkVudGVyIiwiX2hhbmxkZVN1Ym1pdE9uRW50ZXIiLCJpbnB1dFZhbHVlcyIsImlucHV0IiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIl9yZXNldCIsInByZXZlbnREZWZhdWx0IiwiUG9wdXBXaXRoSW1hZ2UiLCJfaW1hZ2UiLCJfdGl0bGUiLCJzcmMiLCJhbHQiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtcyIsIml0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsIlVzZXJJbmZvIiwibmFtZVNlbGVjdG9yIiwiZW1wbG95bWVudFNlbGVjdG9yIiwiX25hbWVFbGVtZW50IiwiX2VtcGxveW1lbnRFbGVtZW50IiwiZW1wbG95bWVudCIsIl9yZWYyIiwiYWJvdXQiLCJBcGkiLCJvcHRpb25zIiwiYmFzZVVybCIsImhlYWRlcnMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXJkVGVtcGxhdGVTZWxlY3RvciIsInByb2ZpbGVGb3JtRWxlbWVudCIsImltYWdlRm9ybUVsZW1lbnQiLCJuYW1lSW5wdXQiLCJlbXBsb3ltZW50SW5wdXQiLCJidXR0b25FZGl0IiwiYnV0dG9uQWRkIiwic3VibWl0QnV0dG9uUHJvZmlsZSIsInN1Ym1pdEJ1dHRvbkltYWdlIiwicG9wdXBXaXRoSW1hZ2UiLCJ1c2VySW5mbyIsImFwaSIsImF1dGhvcml6YXRpb24iLCJnZXRVc2VyRGF0YSIsImNvbnNvbGUiLCJsb2ciLCJzZXRVc2VySW5mbyIsImNhdGNoIiwiZXJyIiwiaW5pdGlhbENhcmRMaXN0Iiwib3BlbiIsInVzZXJEYXRhIiwiX2lzT3duZXIiLCJjYXJkIiwiZ2VuZXJhdGVDYXJkIiwiYWRkSXRlbSIsImdldEluaXRpYWxDYXJkcyIsImNhcmRzIiwicmVuZGVyZXJJdGVtcyIsInBvcHVwV2l0aFVzZXJJbmZvIiwiZm9ybURhdGEiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJ1cGRhdGVVc2VySW5mbyIsInVwZGF0ZVVzZXJEYXRhIiwicG9wdXBXaXRoQ2FyZEluZm8iLCJjYXJkRGF0YSIsImFkZENhcmQiLCJuZXdDYXJkRGF0YSIsIm5ld0NhcmQiLCJwcm9maWxlRm9ybVZhbGlkYXRvciIsImZvcm1TZWxlY3RvciIsImltYWdlRm9ybVZhbGlkYXRvciIsImN1cnJlbnRVc2VySW5mbyIsImdldFVzZXJJbmZvIiwiZW5hYmxlVmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=