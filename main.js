!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function t(e,n){var r=e.data,o=e.handleCardClick,i=e.handleDeleteClick,a=e.handleLike;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=r.name,this._link=r.link,this._likes=r.likes,this._userId=r.owner._id,this._cardId=r._id,this._handleCardClick=o,this._handleDeleteClick=i,this._handleLike=a,this._templateSelector=n}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place").cloneNode(!0)}},{key:"_setEventListeners",value:function(t){var e=this;t.querySelector(".button_action_like").addEventListener("click",(function(t){t.target.classList.toggle("button_action_like--active"),e._handleLike()})),t.querySelector(".button_action_trash").addEventListener("click",(function(){e._handleDeleteClick()})),t.querySelector(".place__image").addEventListener("click",(function(){e._handleCardClick()}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".place__title").textContent=this._name,this._element.querySelector(".place__image").setAttribute("src",this._link),this._element.querySelector(".place__image").setAttribute("alt",this._name),this._setEventListeners(this._element),this.updateLikes(this._likes),this._element}},{key:"updateLikes",value:function(t){this._element.querySelector(".like-elements__count").textContent=t.length.toString()}},{key:"toggleButtonTrash",value:function(){this._element.querySelector(".button_action_trash").classList.add("button_action_trash-active")}},{key:"updateCard",value:function(){this._element.remove()}},{key:"isLiked",value:function(){return!this._element.querySelector(".button_action_like").classList.contains("button_action_like--active")}},{key:"checkedUserLiked",value:function(t){return this._likes.some((function(e){return e._id===t}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=n,this._inputList=Array.from(n.querySelectorAll(e.inputSelector)),this._buttonElement=n.querySelector(e.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._config.inputErrorClass),n.textContent=e,n.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._config.inputErrorClass),e.classList.remove(this._config.errorClass),e.textContent=""}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._buttonElement.classList.add(this._config.inactiveButtonClass):this._buttonElement.classList.remove(this._config.inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners(),this._toggleButtonState()}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==a(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===a(o)?o:String(o)),r)}var o}var c=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._form=document.querySelector(".form"),this._handlerOnEsc=this._handleEscClose.bind(this),this._handlerSupClose=this._handleSuperClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._form.classList.add("form_mode_active"),this._setEventListeners()}},{key:"close",value:function(){this._form.classList.remove("form_mode_active"),this._removeListeners()}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"_handleSuperClose",value:function(t){this._popup.contains(t.target)||this.close()}},{key:"_removeListeners",value:function(){document.removeEventListener("keydown",this._handlerOnEsc),this._form.removeEventListener("click",this._handlerSupClose)}},{key:"_setEventListeners",value:function(){var t=this;this._popup.querySelector(".button_action_close").addEventListener("click",(function(){t.close()})),this._form.addEventListener("click",this._handlerSupClose),document.addEventListener("keydown",this._handlerOnEsc)}}])&&u(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===l(o)?o:String(o)),r)}var o}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=m(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},f.apply(this,arguments)}function p(t,e){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},p(t,e)}function y(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}var h=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&p(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=m(r);if(o){var n=m(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===l(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return y(t)}(this,t)});function a(t,e){var n,r=t.submitCallback;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitCallback=r,n._submitButton=n._popup.querySelector(".button_action_create"),n._handlerSubmit=n._handleSubmit.bind(y(n)),n._handlerSubmitOnEnter=n._hanldeSubmitOnEnter.bind(y(n)),n}return e=a,(n=[{key:"_getInputValues",value:function(){var t={};return this._popup.querySelectorAll(".form__input").forEach((function(e){t[e.name]=e.value})),t}},{key:"_reset",value:function(){this._popup.querySelectorAll(".form__input").forEach((function(t){t.value=""}))}},{key:"open",value:function(){f(m(a.prototype),"open",this).call(this),this._setEventListeners(),this._popup.classList.add("form__set_mode_active")}},{key:"close",value:function(){f(m(a.prototype),"close",this).call(this),this._removeListeners(),this._popup.classList.remove("form__set_mode_active"),this._reset()}},{key:"_handleSubmit",value:function(t){t.preventDefault(),this._submitCallback()}},{key:"_hanldeSubmitOnEnter",value:function(t){"Enter"===t.key&&(t.preventDefault(),this._submitButton.classList.contains("button_action_create-inactive")||("Guardar"===this._submitButton.textContent?this._submitButton.textContent="Guardando...":"Crear"===this._submitButton.textContent&&(this._submitButton.textContent="Creando..."),this._submitCallback()))}},{key:"_setEventListeners",value:function(){f(m(a.prototype),"_setEventListeners",this).call(this),this._popup.addEventListener("submit",this._handlerSubmit),document.addEventListener("keydown",this._handlerSubmitOnEnter)}},{key:"_removeListeners",value:function(){f(m(a.prototype),"_removeListeners",this).call(this),this._popup.removeEventListener("submit",this._handlerSubmit),document.removeEventListener("keydown",this._handlerSubmitOnEnter)}}])&&s(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(c);function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},b.apply(this,arguments)}function _(t,e){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},_(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._image=e._popup.querySelector(".popup__image"),e._title=e._popup.querySelector(".popup__title"),e}return e=a,(n=[{key:"open",value:function(t){var e=t.name,n=t.link;b(S(a.prototype),"open",this).call(this),this._popup.classList.add("popup_mode_active"),this._image.src=n,this._title.textContent=e,this._image.alt=n}},{key:"close",value:function(){b(S(a.prototype),"close",this).call(this),this._popup.classList.remove("popup_mode_active")}}])&&v(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(c);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===g(o)?o:String(o)),r)}var o}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},w.apply(this,arguments)}function C(t,e){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},C(t,e)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&C(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=j(r);if(o){var n=j(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var n,r=t.handleCardDelete;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e)).handleCardDelete=r,n}return e=a,(n=[{key:"open",value:function(){w(j(a.prototype),"open",this).call(this),this._popup.classList.add("form__set_mode_active"),this._setEventListeners()}},{key:"close",value:function(){w(j(a.prototype),"close",this).call(this),this._popup.classList.remove("form__set_mode_active"),this._removeListeners()}},{key:"_setEventListeners",value:function(){w(j(a.prototype),"_setEventListeners",this).call(this),this._popup.querySelector(".button_action_create").addEventListener("click",this.handleCardDelete)}},{key:"_removeListeners",value:function(){w(j(a.prototype),"_removeListeners",this).call(this),this._popup.querySelector(".button_action_create").removeEventListener("click",this.handleCardDelete)}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(c);function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var I=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"rendererItems",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function T(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===q(o)?o:String(o)),r)}var o}var B=function(){function t(e){var n=e.nameSelector,r=e.employmentSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(n),this._employmentElement=document.querySelector(r)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,employment:this._employmentElement.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about;this._nameElement.textContent=e,this._employmentElement.textContent=n}}])&&T(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}var D=function(){function t(e){var n=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._avatarElement=document.querySelector(n)}var e,n;return e=t,(n=[{key:"updateAvatarInfo",value:function(t){this._avatarElement.setAttribute("src",t)}}])&&U(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==x(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==x(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===x(o)?o:String(o)),r)}var o}var V=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.baseUrl=e.baseUrl,this.headers=e.headers}var e,n;return e=t,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"getUserData",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"getUserId",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){return t._id}))}},{key:"updateUserInfo",value:function(t){var e=t.name,n=t.about;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:n})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"addCard",value:function(t){var e=t.name,n=t.link;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:n})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"likeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"unlikeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"updateProfilePhoto",value:function(t){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(t)}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}}])&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),G="#place-template",N=document.querySelector("#profile"),J=document.querySelector("#image"),H=document.querySelector("#avatar"),z=document.querySelector("#name-input"),M=document.querySelector("#employment-input"),F=document.querySelector(".button_action_edit"),K=document.querySelector(".button_action_add"),Q=document.querySelector(".button_type_photo"),W=document.querySelector("#submit-profile"),X=document.querySelector("#submit-image"),Y=document.querySelector("#submit-avatar"),Z=new k(".popup"),$=new B({nameSelector:".profile__username",employmentSelector:".profile__useremployment"}),tt=new D({avatarSelector:".profile__image"}),et=new V({baseUrl:"https://around.nomoreparties.co/v1/web_es_09",headers:{authorization:"e0d01e4f-01c5-4081-b9ff-c482a3e73038","Content-Type":"application/json"}});et.getUserData().then((function(t){$.setUserInfo(t),tt.updateAvatarInfo(t.avatar)})).catch((function(t){console.log(t)}));var nt=new I({renderer:function(t){var e=new n({data:t,handleCardClick:function(){Z.open(t)},handleDeleteClick:function(){var t=new P({handleCardDelete:function(){var n=e._cardId.toString();et.deleteCard(n).then((function(t){console.log(t)})).catch((function(t){console.log(t)})),e.updateCard(),t.close()}},"#confirmation");t.open()},handleLike:function(){var t=e.isLiked(),n=e._cardId.toString();t?et.unlikeCard(n).then((function(t){e.updateLikes(t.likes)})).catch((function(t){console.log(t)})):et.likeCard(n).then((function(t){e.updateLikes(t.likes)})).catch((function(t){console.log(t)}))}},G);et.getUserId().then((function(t){e._userId===t&&e.toggleButtonTrash(),e.checkedUserLiked(t)&&e._element.querySelector(".button_action_like").classList.add("button_action_like--active")}));var r=e.generateCard();nt.addItem(r)}},".places");et.getInitialCards().then((function(t){nt.rendererItems(t)})).catch((function(t){console.log(t)}));var rt=new h({submitCallback:function(){var t=rt._getInputValues();et.updateUserInfo(t).then((function(t){$.setUserInfo(t),rt.close(),W.textContent="Guardar"})).catch((function(t){console.log(t)}))}},"#profile"),ot=new h({submitCallback:function(){var t=ot._getInputValues();et.addCard(t).then((function(t){var e=new n({data:t,handleCardClick:function(){Z.open(t)},handleDeleteClick:function(){var t=new P({handleCardDelete:function(){var n=e._cardId.toString();et.deleteCard(n).then((function(t){console.log(t)})).catch((function(t){console.log(t)})),e.updateCard(),t.close()}},"#confirmation")},handleLike:function(){var t=e.isLiked(),n=e._cardId.toString();t?et.unlikeCard(n).then((function(t){e.updateLikes(t.likes)})).catch((function(t){console.log(t)})):et.likeCard(n).then((function(t){e.updateLikes(t.likes)})).catch((function(t){console.log(t)}))}},G);et.getUserId().then((function(t){e._userId===t&&e.toggleButtonTrash()}));var r=e.generateCard();nt.addItem(r),ot.close(),X.textContent="Crear"})).catch((function(t){console.log(t)}))}},"#image"),it=new h({submitCallback:function(){var t=it._getInputValues();et.updateProfilePhoto(t).then((function(t){tt.updateAvatarInfo(t),it.close(),Y.textContent="Guardar"})).catch((function(t){console.log(t)}))}},"#avatar"),at=new i({formSelector:".form__set",inputSelector:".form__input",submitButtonSelector:"#submit-profile",inactiveButtonClass:"button_action_create-inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"},N),ut=new i({formSelector:".form__set",inputSelector:".form__input",submitButtonSelector:"#submit-image",inactiveButtonClass:"button_action_create-inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"},J),ct=new i({formSelector:".form__set",inputSelector:".form__input",submitButtonSelector:"#submit-avatar",inactiveButtonClass:"button_action_create-inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"},H);F.addEventListener("click",(function(){var t=$.getUserInfo();z.value=t.name,M.value=t.employment,at.enableValidation(),rt.open()})),K.addEventListener("click",(function(){ot.open(),ut.enableValidation()})),Q.addEventListener("click",(function(){it.open(),ct.enableValidation()})),W.addEventListener("click",(function(t){t.preventDefault(),W.textContent="Guardando...",rt._submitCallback()})),X.addEventListener("click",(function(t){t.preventDefault(),X.textContent="Creando...",ot._submitCallback()})),Y.addEventListener("click",(function(t){t.preventDefault(),Y.textContent="Guardando...",it._submitCallback()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3lKLEVBQWdCM0ksTUFBUW1NLEVBQWdCdkYsV0FDeENtRixHQUFxQk0sbUJBQ3JCcEIsR0FBa0JsQixNQUNwQixJQUVBbEIsRUFBVXRJLGlCQUFpQixTQUFTLFdBQ2xDK0ssR0FBa0J2QixPQUNsQmtDLEdBQW1CSSxrQkFDckIsSUFFQXZELEVBQWF2SSxpQkFBaUIsU0FBUyxXQUNyQ3FMLEdBQW9CN0IsT0FDcEJtQyxHQUFvQkcsa0JBQ3RCLElBR0F0RCxFQUFvQnhJLGlCQUFpQixTQUFTLFNBQUNDLEdBQzdDQSxFQUFJOEUsaUJBQ0p5RCxFQUFvQmpJLFlBQWMsZUFDbENtSyxHQUFrQnhHLGlCQUNwQixJQUVBdUUsRUFBa0J6SSxpQkFBaUIsU0FBUyxTQUFDQyxHQUMzQ0EsRUFBSThFLGlCQUNKMEQsRUFBa0JsSSxZQUFjLGFBQ2hDd0ssR0FBa0I3RyxpQkFDcEIsSUFFQXdFLEVBQW1CMUksaUJBQWlCLFNBQVMsU0FBQ0MsR0FDNUNBLEVBQUk4RSxpQkFDSjJELEVBQW1CbkksWUFBYyxlQUNqQzhLLEdBQW9CbkgsaUJBQ3RCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cE9mQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL2NvbXBvbmVudHMvQXZhdGFySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHsgZGF0YSwgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVEZWxldGVDbGljaywgaGFuZGxlTGlrZSB9LCB0ZW1wbGF0ZVNlbGVjdG9yKSB7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgICB0aGlzLl91c2VySWQgPSBkYXRhLm93bmVyLl9pZDtcbiAgICB0aGlzLl9jYXJkSWQgPSBkYXRhLl9pZDtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcbiAgICB0aGlzLl9oYW5kbGVMaWtlID0gaGFuZGxlTGlrZTtcbiAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZVwiKS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgcmV0dXJuIGNhcmRUZW1wbGF0ZTtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycyhjYXJkRWxlbWVudCkge1xuICAgIGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnV0dG9uX2FjdGlvbl9saWtlXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoXCJidXR0b25fYWN0aW9uX2xpa2UtLWFjdGl2ZVwiKTtcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2UoKTtcbiAgICB9KVxuXG4gICAgY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b25fYWN0aW9uX3RyYXNoXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljaygpO1xuICAgIH0pXG5cbiAgICBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19pbWFnZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKCk7XG4gICAgfSlcbiAgfVxuXG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcblxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9fdGl0bGVcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9faW1hZ2VcIikuc2V0QXR0cmlidXRlKFwic3JjXCIsIHRoaXMuX2xpbmspO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9faW1hZ2VcIikuc2V0QXR0cmlidXRlKFwiYWx0XCIsIHRoaXMuX25hbWUpO1xuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnModGhpcy5fZWxlbWVudCk7XG4gICAgdGhpcy51cGRhdGVMaWtlcyh0aGlzLl9saWtlcyk7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIHVwZGF0ZUxpa2VzKGxpa2VzKSB7XG4gICAgY29uc3QgbGlrZUNvdW50RWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5saWtlLWVsZW1lbnRzX19jb3VudFwiKTtcbiAgICBsaWtlQ291bnRFbGVtZW50LnRleHRDb250ZW50ID0gbGlrZXMubGVuZ3RoLnRvU3RyaW5nKCk7XG4gIH1cblxuICB0b2dnbGVCdXR0b25UcmFzaCgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnV0dG9uX2FjdGlvbl90cmFzaFwiKS5jbGFzc0xpc3QuYWRkKFwiYnV0dG9uX2FjdGlvbl90cmFzaC1hY3RpdmVcIik7XG4gIH1cblxuICB1cGRhdGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XG4gIH1cblxuICBpc0xpa2VkKCkge1xuICAgIGlmKHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b25fYWN0aW9uX2xpa2VcIikuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYnV0dG9uX2FjdGlvbl9saWtlLS1hY3RpdmVcIikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgY2hlY2tlZFVzZXJMaWtlZCh1c2VySWQpIHtcbiAgICByZXR1cm4gdGhpcy5fbGlrZXMuc29tZSh1c2VyID0+IHVzZXIuX2lkID09PSB1c2VySWQpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkOyIsImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmlucHV0U2VsZWN0b3IpKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgaWYodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yOyIsImNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9mb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xuICAgIHRoaXMuX2hhbmRsZXJPbkVzYyA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5faGFuZGxlclN1cENsb3NlID0gdGhpcy5faGFuZGxlU3VwZXJDbG9zZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9mb3JtLmNsYXNzTGlzdC5hZGQoXCJmb3JtX21vZGVfYWN0aXZlXCIpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9mb3JtLmNsYXNzTGlzdC5yZW1vdmUoXCJmb3JtX21vZGVfYWN0aXZlXCIpO1xuICAgIHRoaXMuX3JlbW92ZUxpc3RlbmVycygpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xuICAgIGlmKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgX2hhbmRsZVN1cGVyQ2xvc2UoZXZ0KSB7XG4gICAgaWYoIXRoaXMuX3BvcHVwLmNvbnRhaW5zKGV2dC50YXJnZXQpKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgX3JlbW92ZUxpc3RlbmVycygpIHtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVyT25Fc2MpO1xuICAgIHRoaXMuX2Zvcm0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZXJTdXBDbG9zZSk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5idXR0b25fYWN0aW9uX2Nsb3NlXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSlcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVyU3VwQ2xvc2UpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZXJPbkVzYyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXA7IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHsgc3VibWl0Q2FsbGJhY2sgfSwgcG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3N1Ym1pdENhbGxiYWNrID0gc3VibWl0Q2FsbGJhY2s7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5idXR0b25fYWN0aW9uX2NyZWF0ZVwiKTtcbiAgICB0aGlzLl9oYW5kbGVyU3VibWl0ID0gdGhpcy5faGFuZGxlU3VibWl0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5faGFuZGxlclN1Ym1pdE9uRW50ZXIgPSB0aGlzLl9oYW5sZGVTdWJtaXRPbkVudGVyLmJpbmQodGhpcyk7XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcbiAgICBjb25zdCBpbnB1dEVsZW1lbnRzID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvckFsbChcIi5mb3JtX19pbnB1dFwiKTtcblxuICAgIGlucHV0RWxlbWVudHMuZm9yRWFjaChpbnB1dCA9PiB7XG4gICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGlucHV0VmFsdWVzO1xuICB9XG5cbiAgX3Jlc2V0KCkge1xuICAgIGNvbnN0IGlucHV0RWxlbWVudHMgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1fX2lucHV0XCIpO1xuICAgIGlucHV0RWxlbWVudHMuZm9yRWFjaChpbnB1dCA9PiB7XG4gICAgICBpbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgfSk7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJmb3JtX19zZXRfbW9kZV9hY3RpdmVcIik7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX3JlbW92ZUxpc3RlbmVycygpO1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJmb3JtX19zZXRfbW9kZV9hY3RpdmVcIik7XG4gICAgdGhpcy5fcmVzZXQoKTtcbiAgfVxuXG4gIF9oYW5kbGVTdWJtaXQoZXZ0KSB7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5fc3VibWl0Q2FsbGJhY2soKTtcbiAgfVxuXG4gIF9oYW5sZGVTdWJtaXRPbkVudGVyKGV2dCkge1xuICAgIGlmKGV2dC5rZXkgPT09IFwiRW50ZXJcIikge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZighdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5jb250YWlucyhcImJ1dHRvbl9hY3Rpb25fY3JlYXRlLWluYWN0aXZlXCIpKSB7XG4gICAgICAgIGlmKHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9PT0gXCJHdWFyZGFyXCIpIHtcbiAgICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkd1YXJkYW5kby4uLlwiO1xuICAgICAgICB9IGVsc2UgaWYodGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID09PSBcIkNyZWFyXCIpIHtcbiAgICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkNyZWFuZG8uLi5cIjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9zdWJtaXRDYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuX2hhbmRsZXJTdWJtaXQpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZXJTdWJtaXRPbkVudGVyKTtcbiAgfVxuXG4gIF9yZW1vdmVMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuX3JlbW92ZUxpc3RlbmVycygpO1xuICAgIHRoaXMuX3BvcHVwLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgdGhpcy5faGFuZGxlclN1Ym1pdCk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlclN1Ym1pdE9uRW50ZXIpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEZvcm07IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl90aXRsZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3RpdGxlXCIpO1xyXG4gIH1cclxuXHJcbiAgb3Blbih7IG5hbWUsIGxpbmt9KSB7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfbW9kZV9hY3RpdmVcIik7XHJcbiAgICB0aGlzLl9pbWFnZS5zcmMgPSBsaW5rO1xyXG4gICAgdGhpcy5fdGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgdGhpcy5faW1hZ2UuYWx0ID0gbGluaztcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9tb2RlX2FjdGl2ZVwiKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEltYWdlOyIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5jbGFzcyBQb3B1cE9mQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IGhhbmRsZUNhcmREZWxldGUgfSAgLHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLmhhbmRsZUNhcmREZWxldGUgPSBoYW5kbGVDYXJkRGVsZXRlO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICBzdXBlci5vcGVuKCk7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcImZvcm1fX3NldF9tb2RlX2FjdGl2ZVwiKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwiZm9ybV9fc2V0X21vZGVfYWN0aXZlXCIpO1xuICAgIHRoaXMuX3JlbW92ZUxpc3RlbmVycygpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuYnV0dG9uX2FjdGlvbl9jcmVhdGVcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGFuZGxlQ2FyZERlbGV0ZSk7XG4gIH1cblxuICBfcmVtb3ZlTGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLl9yZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbl9hY3Rpb25fY3JlYXRlXCIpLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhhbmRsZUNhcmREZWxldGUpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHVwT2ZDb25maXJtYXRpb247IiwiY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICAvL3RoaXMuaXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG5cbiAgLy9Nw6l0b2RvIHDDumJsaWNvIHF1ZSByZW5kZXJpemEgdG9kb3MgbG9zIGVsZW1lbnRvcyBkZSBsYSBww6FnaW5hXG4gIHJlbmRlcmVySXRlbXMoaXRlbXMpIHtcbiAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgfSk7XG4gIH1cblxuICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgU2VjdGlvbjsiLCJjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IoeyBuYW1lU2VsZWN0b3IsIGVtcGxveW1lbnRTZWxlY3RvciB9KSB7XHJcbiAgICB0aGlzLl9uYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2VtcGxveW1lbnRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbXBsb3ltZW50U2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCBuYW1lID0gdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQ7XHJcbiAgICBjb25zdCBlbXBsb3ltZW50ID0gdGhpcy5fZW1wbG95bWVudEVsZW1lbnQudGV4dENvbnRlbnQ7XHJcbiAgICByZXR1cm4geyBuYW1lLCBlbXBsb3ltZW50IH07XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbygge25hbWUsIGFib3V0fSApIHtcclxuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX2VtcGxveW1lbnRFbGVtZW50LnRleHRDb250ZW50ID0gYWJvdXQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVc2VySW5mbzsiLCJjbGFzcyBBdmF0YXJJbmZve1xuICBjb25zdHJ1Y3Rvcih7YXZhdGFyU2VsZWN0b3J9KSB7XG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xuICB9XG5cbiAgdXBkYXRlQXZhdGFySW5mbyhhdmF0YXIpIHtcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50LnNldEF0dHJpYnV0ZShcInNyY1wiLCBhdmF0YXIpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEF2YXRhckluZm87IiwiY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMuYmFzZVVybCA9IG9wdGlvbnMuYmFzZVVybDtcbiAgICB0aGlzLmhlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnM7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnNcbiAgICB9KVxuICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICBpZihyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSlcbiAgfVxuXG4gIGdldFVzZXJEYXRhKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzXG4gICAgfSlcbiAgICAudGhlbihyZXMgPT4ge1xuICAgICAgaWYocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pXG4gIH1cblxuICBnZXRVc2VySWQoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnNcbiAgICB9KVxuICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICBpZihyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSlcbiAgICAudGhlbih1c2VyRGF0YSA9PiB7XG4gICAgICByZXR1cm4gdXNlckRhdGEuX2lkO1xuICAgIH0pXG4gIH1cblxuICB1cGRhdGVVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBuYW1lLCBhYm91dCB9KVxuICAgIH0pXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIGlmKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KVxuICB9XG5cbiAgYWRkQ2FyZCh7IG5hbWUsIGxpbmsgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgbGluayB9KVxuICAgIH0pXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIGlmKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pXG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1xuICAgIH0pXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIGlmKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KVxuICB9XG5cbiAgbGlrZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzXG4gICAgfSlcbiAgICAudGhlbihyZXMgPT4ge1xuICAgICAgaWYocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pXG4gIH1cblxuICB1bmxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1xuICAgIH0pXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIGlmKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KVxuICB9XG5cbiAgdXBkYXRlUHJvZmlsZVBob3RvKG5ld0F2YXRhcikge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkobmV3QXZhdGFyKVxuICAgIH0pXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIGlmKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwaTsiLCJjb25zdCBjYXJkVGVtcGxhdGVTZWxlY3RvciA9IFwiI3BsYWNlLXRlbXBsYXRlXCI7XG5jb25zdCBwcm9maWxlRm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGVcIik7XG5jb25zdCBpbWFnZUZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbWFnZVwiKTtcbmNvbnN0IGF2YXRhckZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXJcIik7XG5jb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25hbWUtaW5wdXRcIik7XG5jb25zdCBlbXBsb3ltZW50SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VtcGxveW1lbnQtaW5wdXRcIik7XG5jb25zdCBidXR0b25FZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b25fYWN0aW9uX2VkaXRcIik7XG5jb25zdCBidXR0b25BZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbl9hY3Rpb25fYWRkXCIpO1xuY29uc3QgYnV0dG9uVXBkYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b25fdHlwZV9waG90b1wiKVxuY29uc3Qgc3VibWl0QnV0dG9uUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXQtcHJvZmlsZScpO1xuY29uc3Qgc3VibWl0QnV0dG9uSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3VibWl0LWltYWdlJyk7XG5jb25zdCBzdWJtaXRCdXR0b25BdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3N1Ym1pdC1hdmF0YXJcIik7XG5cbmNvbnN0IHByb2ZpbGVGb3JtQ29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLmZvcm1fX3NldFwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIjc3VibWl0LXByb2ZpbGVcIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJidXR0b25fYWN0aW9uX2NyZWF0ZS1pbmFjdGl2ZVwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXRfdHlwZS1lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcImZvcm1fX2lucHV0LWVycm9yX2FjdGl2ZVwiXG59O1xuXG5jb25zdCBpbWFnZUZvcm1Db25maWcgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIuZm9ybV9fc2V0XCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLmZvcm1fX2lucHV0XCIsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIiNzdWJtaXQtaW1hZ2VcIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJidXR0b25fYWN0aW9uX2NyZWF0ZS1pbmFjdGl2ZVwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXRfdHlwZS1lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcImZvcm1fX2lucHV0LWVycm9yX2FjdGl2ZVwiXG59O1xuXG5jb25zdCBhdmF0YXJGb3JtQ29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLmZvcm1fX3NldFwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIjc3VibWl0LWF2YXRhclwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImJ1dHRvbl9hY3Rpb25fY3JlYXRlLWluYWN0aXZlXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJmb3JtX19pbnB1dF90eXBlLWVycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXQtZXJyb3JfYWN0aXZlXCJcbn07XG5cbmV4cG9ydCB7IGNhcmRUZW1wbGF0ZVNlbGVjdG9yLCBpbWFnZUZvcm1FbGVtZW50ICwgYnV0dG9uRWRpdCwgYnV0dG9uQWRkLCBidXR0b25VcGRhdGUsIHN1Ym1pdEJ1dHRvblByb2ZpbGUsXG5zdWJtaXRCdXR0b25JbWFnZSwgc3VibWl0QnV0dG9uQXZhdGFyLCBuYW1lSW5wdXQsIGVtcGxveW1lbnRJbnB1dCAsIHByb2ZpbGVGb3JtQ29uZmlnLCBpbWFnZUZvcm1Db25maWcsIHByb2ZpbGVGb3JtRWxlbWVudCxcbmF2YXRhckZvcm1Db25maWcsIGF2YXRhckZvcm1FbGVtZW50IH07IiwiLy9pbXBvcnRhY2lvbiBkZSBjc3NcbmltcG9ydCBcIi4vcGFnZXMvaW5kZXguY3NzXCI7XG5cbi8vaW1wb3J0YWNpb24gZGUgY2xhc2VzXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFBvcHVwT2ZDb25maXJtYXRpb24gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cE9mQ29uZmlybWF0aW9uLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgQXZhdGFySW5mbyBmcm9tIFwiLi9jb21wb25lbnRzL0F2YXRhckluZm8uanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4vY29tcG9uZW50cy9BcGkuanNcIjtcblxuLy9pbXBvcnRhY2lvbiBkZSBjb25zdGFudGVzXG5pbXBvcnQgeyBidXR0b25BZGQsIGJ1dHRvbkVkaXQsIGJ1dHRvblVwZGF0ZSwgY2FyZFRlbXBsYXRlU2VsZWN0b3IsIGVtcGxveW1lbnRJbnB1dCwgaW1hZ2VGb3JtQ29uZmlnLCBpbWFnZUZvcm1FbGVtZW50LCBuYW1lSW5wdXQsXG4gIHByb2ZpbGVGb3JtQ29uZmlnLCBwcm9maWxlRm9ybUVsZW1lbnQsIHN1Ym1pdEJ1dHRvbkltYWdlLFxuICBzdWJtaXRCdXR0b25Qcm9maWxlLCBhdmF0YXJGb3JtQ29uZmlnLCBhdmF0YXJGb3JtRWxlbWVudCwgc3VibWl0QnV0dG9uQXZhdGFyIH0gZnJvbSBcIi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5cbi8vY3JlYWNpb24gZGUgaW5zdGFuY2lhc1xuXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIi5wb3B1cFwiKTtcblxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oeyBuYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3VzZXJuYW1lXCIsIGVtcGxveW1lbnRTZWxlY3RvcjogXCIucHJvZmlsZV9fdXNlcmVtcGxveW1lbnRcIiB9KTtcblxuY29uc3QgYXZhdGFySW5mbyA9IG5ldyBBdmF0YXJJbmZvKHsgYXZhdGFyU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2ltYWdlXCIgfSk7XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViX2VzXzA5XCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcImUwZDAxZTRmLTAxYzUtNDA4MS1iOWZmLWM0ODJhM2U3MzAzOFwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gIH1cbn0pO1xuXG5hcGkuZ2V0VXNlckRhdGEoKVxuLnRoZW4oZGF0YSA9PiB7XG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGRhdGEpO1xuICBhdmF0YXJJbmZvLnVwZGF0ZUF2YXRhckluZm8oZGF0YS5hdmF0YXIpO1xufSlcbi5jYXRjaChlcnIgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIpO1xufSlcblxuY29uc3QgaW5pdGlhbENhcmRMaXN0ID0gbmV3IFNlY3Rpb24oe1xuICByZW5kZXJlcjogKGl0ZW0pID0+IHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IG5ldyBDYXJkKHtcbiAgICAgIGRhdGE6IGl0ZW0sXG4gICAgICBoYW5kbGVDYXJkQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgcG9wdXBXaXRoSW1hZ2Uub3BlbihpdGVtKTtcbiAgICAgIH1cbiAgICAgICwgaGFuZGxlRGVsZXRlQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgY29uc3QgcG9wdXBPZkNvbmZpcm1hdGlvbiA9IG5ldyBQb3B1cE9mQ29uZmlybWF0aW9uKHtcbiAgICAgICAgICBoYW5kbGVDYXJkRGVsZXRlOiAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkYXRhSWQgPSBjYXJkRWxlbWVudC5fY2FyZElkLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBhcGkuZGVsZXRlQ2FyZChkYXRhSWQpXG4gICAgICAgICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgY2FyZEVsZW1lbnQudXBkYXRlQ2FyZCgpO1xuICAgICAgICAgICAgcG9wdXBPZkNvbmZpcm1hdGlvbi5jbG9zZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAsIFwiI2NvbmZpcm1hdGlvblwiKVxuICAgICAgICBwb3B1cE9mQ29uZmlybWF0aW9uLm9wZW4oKTtcbiAgICAgIH1cbiAgICAgICwgaGFuZGxlTGlrZTogKCkgPT4ge1xuICAgICAgICBjb25zdCBpc0xpa2VkID0gY2FyZEVsZW1lbnQuaXNMaWtlZCgpO1xuICAgICAgICBjb25zdCBjYXJkSWQgPSBjYXJkRWxlbWVudC5fY2FyZElkLnRvU3RyaW5nKCk7XG5cbiAgICAgICAgaWYoaXNMaWtlZCkge1xuICAgICAgICAgIGFwaS51bmxpa2VDYXJkKGNhcmRJZClcbiAgICAgICAgICAudGhlbih1cGRhdGVkQ2FyZCA9PiB7XG4gICAgICAgICAgICBjYXJkRWxlbWVudC51cGRhdGVMaWtlcyh1cGRhdGVkQ2FyZC5saWtlcyk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhcGkubGlrZUNhcmQoY2FyZElkKVxuICAgICAgICAgIC50aGVuKHVwZGF0ZWRDYXJkID0+IHtcbiAgICAgICAgICAgIGNhcmRFbGVtZW50LnVwZGF0ZUxpa2VzKHVwZGF0ZWRDYXJkLmxpa2VzKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgICwgY2FyZFRlbXBsYXRlU2VsZWN0b3IpO1xuICAgIGFwaS5nZXRVc2VySWQoKVxuICAgIC50aGVuKGNhcmRJZCA9PiB7XG4gICAgICBjb25zdCBpc093bmVyID0gY2FyZEVsZW1lbnQuX3VzZXJJZCA9PT0gY2FyZElkO1xuXG4gICAgICBpZihpc093bmVyKSB7XG4gICAgICAgIGNhcmRFbGVtZW50LnRvZ2dsZUJ1dHRvblRyYXNoKCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHVzZXJMaWtlZCA9IGNhcmRFbGVtZW50LmNoZWNrZWRVc2VyTGlrZWQoY2FyZElkKTtcbiAgICAgIGlmKHVzZXJMaWtlZCkge1xuICAgICAgICBjYXJkRWxlbWVudC5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbl9hY3Rpb25fbGlrZVwiKS5jbGFzc0xpc3QuYWRkKFwiYnV0dG9uX2FjdGlvbl9saWtlLS1hY3RpdmVcIik7XG4gICAgICB9XG4gICAgfSlcbiAgICBjb25zdCBjYXJkID0gY2FyZEVsZW1lbnQuZ2VuZXJhdGVDYXJkKCk7XG4gICAgaW5pdGlhbENhcmRMaXN0LmFkZEl0ZW0oY2FyZCk7XG4gIH1cbn1cbiwgXCIucGxhY2VzXCIpO1xuXG5hcGkuZ2V0SW5pdGlhbENhcmRzKClcbi50aGVuKGNhcmRzID0+IHtcbiAgaW5pdGlhbENhcmRMaXN0LnJlbmRlcmVySXRlbXMoY2FyZHMpO1xufSlcbi5jYXRjaChlcnIgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIpO1xufSk7XG5cbmNvbnN0IHBvcHVwV2l0aFVzZXJJbmZvID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBzdWJtaXRDYWxsYmFjazogKCkgPT4ge1xuICAgIGNvbnN0IGZvcm1EYXRhID0gcG9wdXBXaXRoVXNlckluZm8uX2dldElucHV0VmFsdWVzKCk7XG5cbiAgICBhcGkudXBkYXRlVXNlckluZm8oZm9ybURhdGEpXG4gICAgLnRoZW4odXBkYXRlVXNlckRhdGEgPT4ge1xuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8odXBkYXRlVXNlckRhdGEpO1xuICAgICAgcG9wdXBXaXRoVXNlckluZm8uY2xvc2UoKTtcbiAgICAgIHN1Ym1pdEJ1dHRvblByb2ZpbGUudGV4dENvbnRlbnQgPSBcIkd1YXJkYXJcIlxuICAgIH0pXG4gICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIH0pXG4gIH1cbn1cbiwgXCIjcHJvZmlsZVwiKTtcblxuY29uc3QgcG9wdXBXaXRoQ2FyZEluZm8gPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHN1Ym1pdENhbGxiYWNrOiAoKSA9PiB7XG4gICAgY29uc3QgY2FyZERhdGEgPSBwb3B1cFdpdGhDYXJkSW5mby5fZ2V0SW5wdXRWYWx1ZXMoKTtcblxuICAgIGFwaS5hZGRDYXJkKGNhcmREYXRhKVxuICAgIC50aGVuKG5ld0NhcmREYXRhID0+IHtcbiAgICAgIGNvbnN0IG5ld0NhcmRFbGVtZW50ID0gbmV3IENhcmQoe1xuICAgICAgICBkYXRhOiBuZXdDYXJkRGF0YSxcbiAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgcG9wdXBXaXRoSW1hZ2Uub3BlbihuZXdDYXJkRGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgLCBoYW5kbGVEZWxldGVDbGljazogKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHBvcHVwT2ZDb25maXJtYXRpb24gPSBuZXcgUG9wdXBPZkNvbmZpcm1hdGlvbih7XG4gICAgICAgICAgICBoYW5kbGVDYXJkRGVsZXRlOiAoKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGRhdGFJZCA9IG5ld0NhcmRFbGVtZW50Ll9jYXJkSWQudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgYXBpLmRlbGV0ZUNhcmQoZGF0YUlkKVxuICAgICAgICAgICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgbmV3Q2FyZEVsZW1lbnQudXBkYXRlQ2FyZCgpO1xuICAgICAgICAgICAgICBwb3B1cE9mQ29uZmlybWF0aW9uLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgICwgXCIjY29uZmlybWF0aW9uXCIpXG4gICAgICAgIH1cbiAgICAgICAgLCBoYW5kbGVMaWtlOiAoKSA9PiB7XG4gICAgICAgICAgY29uc3QgaXNMaWtlZCA9IG5ld0NhcmRFbGVtZW50LmlzTGlrZWQoKTtcbiAgICAgICAgY29uc3QgY2FyZElkID0gbmV3Q2FyZEVsZW1lbnQuX2NhcmRJZC50b1N0cmluZygpO1xuXG4gICAgICAgIGlmKGlzTGlrZWQpIHtcbiAgICAgICAgICBhcGkudW5saWtlQ2FyZChjYXJkSWQpXG4gICAgICAgICAgLnRoZW4odXBkYXRlZENhcmQgPT4ge1xuICAgICAgICAgICAgbmV3Q2FyZEVsZW1lbnQudXBkYXRlTGlrZXModXBkYXRlZENhcmQubGlrZXMpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYXBpLmxpa2VDYXJkKGNhcmRJZClcbiAgICAgICAgICAudGhlbih1cGRhdGVkQ2FyZCA9PiB7XG4gICAgICAgICAgICBuZXdDYXJkRWxlbWVudC51cGRhdGVMaWtlcyh1cGRhdGVkQ2FyZC5saWtlcyk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBjYXJkVGVtcGxhdGVTZWxlY3Rvcik7XG4gICAgICBhcGkuZ2V0VXNlcklkKClcbiAgICAgIC50aGVuKHVzZXJJZCA9PiB7XG4gICAgICAgIGNvbnN0IGlzT3duZXIgPSBuZXdDYXJkRWxlbWVudC5fdXNlcklkID09PSB1c2VySWQ7XG5cbiAgICAgICAgaWYoaXNPd25lcikge1xuICAgICAgICAgIG5ld0NhcmRFbGVtZW50LnRvZ2dsZUJ1dHRvblRyYXNoKCk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBjb25zdCBuZXdDYXJkID0gbmV3Q2FyZEVsZW1lbnQuZ2VuZXJhdGVDYXJkKCk7XG4gICAgICBpbml0aWFsQ2FyZExpc3QuYWRkSXRlbShuZXdDYXJkKTtcbiAgICAgIHBvcHVwV2l0aENhcmRJbmZvLmNsb3NlKCk7XG4gICAgICBzdWJtaXRCdXR0b25JbWFnZS50ZXh0Q29udGVudCA9IFwiQ3JlYXJcIjtcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KVxuICB9XG59XG4sIFwiI2ltYWdlXCIpO1xuXG5jb25zdCBwb3B1cFdpdGhBdmF0YXJJbmZvID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBzdWJtaXRDYWxsYmFjazogKCkgPT4ge1xuICAgIGNvbnN0IGF2YXRhckRhdGEgPSBwb3B1cFdpdGhBdmF0YXJJbmZvLl9nZXRJbnB1dFZhbHVlcygpO1xuXG4gICAgYXBpLnVwZGF0ZVByb2ZpbGVQaG90byhhdmF0YXJEYXRhKVxuICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgYXZhdGFySW5mby51cGRhdGVBdmF0YXJJbmZvKGRhdGEpO1xuICAgICAgcG9wdXBXaXRoQXZhdGFySW5mby5jbG9zZSgpO1xuICAgICAgc3VibWl0QnV0dG9uQXZhdGFyLnRleHRDb250ZW50ID0gXCJHdWFyZGFyXCI7XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSlcbiAgfVxufVxuLCBcIiNhdmF0YXJcIik7XG5cbmNvbnN0IHByb2ZpbGVGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IocHJvZmlsZUZvcm1Db25maWcsIHByb2ZpbGVGb3JtRWxlbWVudCk7XG5cbmNvbnN0IGltYWdlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGltYWdlRm9ybUNvbmZpZywgaW1hZ2VGb3JtRWxlbWVudCk7XG5cbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihhdmF0YXJGb3JtQ29uZmlnLCBhdmF0YXJGb3JtRWxlbWVudCk7XG5cbi8vY29udHJvbGFkb3JlcyBkZSBldmVudG9zIHBhcmEgYWJyaXIgcG9wdXBzXG5idXR0b25FZGl0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGNvbnN0IGN1cnJlbnRVc2VySW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIG5hbWVJbnB1dC52YWx1ZSA9IGN1cnJlbnRVc2VySW5mby5uYW1lO1xuICBlbXBsb3ltZW50SW5wdXQudmFsdWUgPSBjdXJyZW50VXNlckluZm8uZW1wbG95bWVudDtcbiAgcHJvZmlsZUZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuICBwb3B1cFdpdGhVc2VySW5mby5vcGVuKCk7XG59KTtcblxuYnV0dG9uQWRkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIHBvcHVwV2l0aENhcmRJbmZvLm9wZW4oKTtcbiAgaW1hZ2VGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbn0pO1xuXG5idXR0b25VcGRhdGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgcG9wdXBXaXRoQXZhdGFySW5mby5vcGVuKCk7XG4gIGF2YXRhckZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xufSlcblxuLy9jb250cm9sYWRvcmVzIHBhcmEgYm90b25lcyBzdWJtaXRcbnN1Ym1pdEJ1dHRvblByb2ZpbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gIHN1Ym1pdEJ1dHRvblByb2ZpbGUudGV4dENvbnRlbnQgPSBcIkd1YXJkYW5kby4uLlwiO1xuICBwb3B1cFdpdGhVc2VySW5mby5fc3VibWl0Q2FsbGJhY2soKTtcbn0pO1xuXG5zdWJtaXRCdXR0b25JbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgc3VibWl0QnV0dG9uSW1hZ2UudGV4dENvbnRlbnQgPSBcIkNyZWFuZG8uLi5cIjtcbiAgcG9wdXBXaXRoQ2FyZEluZm8uX3N1Ym1pdENhbGxiYWNrKCk7XG59KTtcblxuc3VibWl0QnV0dG9uQXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICBzdWJtaXRCdXR0b25BdmF0YXIudGV4dENvbnRlbnQgPSBcIkd1YXJkYW5kby4uLlwiO1xuICBwb3B1cFdpdGhBdmF0YXJJbmZvLl9zdWJtaXRDYWxsYmFjaygpO1xufSkiXSwibmFtZXMiOlsiQ2FyZCIsIl9yZWYiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiZGF0YSIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwiaGFuZGxlTGlrZSIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfbGlrZXMiLCJsaWtlcyIsIl91c2VySWQiLCJvd25lciIsIl9pZCIsIl9jYXJkSWQiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX2hhbmRsZUxpa2UiLCJfdGVtcGxhdGVTZWxlY3RvciIsImtleSIsInZhbHVlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsImNhcmRFbGVtZW50IiwiX3RoaXMiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJ0ZXh0Q29udGVudCIsInNldEF0dHJpYnV0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsInVwZGF0ZUxpa2VzIiwibGVuZ3RoIiwidG9TdHJpbmciLCJhZGQiLCJyZW1vdmUiLCJjb250YWlucyIsInVzZXJJZCIsInNvbWUiLCJ1c2VyIiwiRm9ybVZhbGlkYXRvciIsImNvbmZpZyIsImZvcm1FbGVtZW50IiwiX2NvbmZpZyIsIl9mb3JtRWxlbWVudCIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5wdXRTZWxlY3RvciIsIl9idXR0b25FbGVtZW50Iiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJjb25jYXQiLCJpZCIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGFzSW52YWxpZElucHV0IiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2Zvcm0iLCJfaGFuZGxlck9uRXNjIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsIl9oYW5kbGVyU3VwQ2xvc2UiLCJfaGFuZGxlU3VwZXJDbG9zZSIsIl9yZW1vdmVMaXN0ZW5lcnMiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfUG9wdXAiLCJfaW5oZXJpdHMiLCJQb3B1cFdpdGhGb3JtIiwiX3N1cGVyIiwic3VibWl0Q2FsbGJhY2siLCJjYWxsIiwiX3N1Ym1pdENhbGxiYWNrIiwiX3N1Ym1pdEJ1dHRvbiIsIl9oYW5kbGVyU3VibWl0IiwiX2hhbmRsZVN1Ym1pdCIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJfaGFuZGxlclN1Ym1pdE9uRW50ZXIiLCJfaGFubGRlU3VibWl0T25FbnRlciIsImlucHV0VmFsdWVzIiwiaW5wdXQiLCJfZ2V0IiwiX2dldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiX3Jlc2V0IiwicHJldmVudERlZmF1bHQiLCJQb3B1cFdpdGhJbWFnZSIsIl9pbWFnZSIsIl90aXRsZSIsInNyYyIsImFsdCIsIlBvcHVwT2ZDb25maXJtYXRpb24iLCJoYW5kbGVDYXJkRGVsZXRlIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbXMiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImVtcGxveW1lbnRTZWxlY3RvciIsIl9uYW1lRWxlbWVudCIsIl9lbXBsb3ltZW50RWxlbWVudCIsImVtcGxveW1lbnQiLCJfcmVmMiIsImFib3V0IiwiQXZhdGFySW5mbyIsImF2YXRhclNlbGVjdG9yIiwiX2F2YXRhckVsZW1lbnQiLCJhdmF0YXIiLCJBcGkiLCJvcHRpb25zIiwiYmFzZVVybCIsImhlYWRlcnMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwidXNlckRhdGEiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsIm5ld0F2YXRhciIsImNhcmRUZW1wbGF0ZVNlbGVjdG9yIiwicHJvZmlsZUZvcm1FbGVtZW50IiwiaW1hZ2VGb3JtRWxlbWVudCIsImF2YXRhckZvcm1FbGVtZW50IiwibmFtZUlucHV0IiwiZW1wbG95bWVudElucHV0IiwiYnV0dG9uRWRpdCIsImJ1dHRvbkFkZCIsImJ1dHRvblVwZGF0ZSIsInN1Ym1pdEJ1dHRvblByb2ZpbGUiLCJzdWJtaXRCdXR0b25JbWFnZSIsInN1Ym1pdEJ1dHRvbkF2YXRhciIsInBvcHVwV2l0aEltYWdlIiwidXNlckluZm8iLCJhdmF0YXJJbmZvIiwiYXBpIiwiYXV0aG9yaXphdGlvbiIsImdldFVzZXJEYXRhIiwic2V0VXNlckluZm8iLCJ1cGRhdGVBdmF0YXJJbmZvIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiaW5pdGlhbENhcmRMaXN0Iiwib3BlbiIsInBvcHVwT2ZDb25maXJtYXRpb24iLCJkYXRhSWQiLCJkZWxldGVDYXJkIiwidXBkYXRlQ2FyZCIsImlzTGlrZWQiLCJ1bmxpa2VDYXJkIiwidXBkYXRlZENhcmQiLCJsaWtlQ2FyZCIsImdldFVzZXJJZCIsInRvZ2dsZUJ1dHRvblRyYXNoIiwiY2hlY2tlZFVzZXJMaWtlZCIsImNhcmQiLCJnZW5lcmF0ZUNhcmQiLCJhZGRJdGVtIiwiZ2V0SW5pdGlhbENhcmRzIiwiY2FyZHMiLCJyZW5kZXJlckl0ZW1zIiwicG9wdXBXaXRoVXNlckluZm8iLCJmb3JtRGF0YSIsIl9nZXRJbnB1dFZhbHVlcyIsInVwZGF0ZVVzZXJJbmZvIiwidXBkYXRlVXNlckRhdGEiLCJwb3B1cFdpdGhDYXJkSW5mbyIsImNhcmREYXRhIiwiYWRkQ2FyZCIsIm5ld0NhcmREYXRhIiwibmV3Q2FyZEVsZW1lbnQiLCJuZXdDYXJkIiwicG9wdXBXaXRoQXZhdGFySW5mbyIsImF2YXRhckRhdGEiLCJ1cGRhdGVQcm9maWxlUGhvdG8iLCJwcm9maWxlRm9ybVZhbGlkYXRvciIsImZvcm1TZWxlY3RvciIsImltYWdlRm9ybVZhbGlkYXRvciIsImF2YXRhckZvcm1WYWxpZGF0b3IiLCJjdXJyZW50VXNlckluZm8iLCJnZXRVc2VySW5mbyIsImVuYWJsZVZhbGlkYXRpb24iXSwic291cmNlUm9vdCI6IiJ9