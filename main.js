!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var n=function(){function e(t,n){var r=t.data,o=t.handleCardClick,i=t.handleDeleteClick,c=t.handleLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=r.name,this._link=r.link,this._likes=r.likes,this._userId=r.owner._id,this._cardId=r._id,this._handleCardClick=o,this._handleDeleteClick=i,this._handleLike=c,this._templateSelector=n}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place").cloneNode(!0)}},{key:"_setEventListeners",value:function(e){var t=this;e.querySelector(".button_action_like").addEventListener("click",(function(e){e.target.classList.toggle("button_action_like--active"),t._handleLike()})),e.querySelector(".button_action_trash").addEventListener("click",(function(){t._handleDeleteClick()})),e.querySelector(".place__image").addEventListener("click",(function(){t._handleCardClick()}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".place__title").textContent=this._name,this._element.querySelector(".place__image").setAttribute("src",this._link),this._element.querySelector(".place__image").setAttribute("alt",this._name),this._setEventListeners(this._element),this.updateLikes(this._likes),this._element}},{key:"updateLikes",value:function(e){this._element.querySelector(".like-elements__count").textContent=e.length.toString()}},{key:"toggleButtonTrash",value:function(){this._element.querySelector(".button_action_trash").classList.add("button_action_trash-active")}},{key:"updateCard",value:function(){this._element.remove()}},{key:"isLiked",value:function(){return!this._element.querySelector(".button_action_like").classList.contains("button_action_like--active")}},{key:"checkedUserLiked",value:function(e){return this._likes.some((function(t){return t._id===e}))}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(n.querySelectorAll(t.inputSelector)),this._buttonElement=n.querySelector(t.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._buttonElement.classList.add(this._config.inactiveButtonClass):this._buttonElement.classList.remove(this._config.inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners(),this._toggleButtonState()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._form=document.querySelector(".form"),this._handlerOnEsc=this._handleEscClose.bind(this),this._handlerSupClose=this._handleSuperClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._form.classList.add("form_mode_active"),this._setEventListeners()}},{key:"close",value:function(){this._form.classList.remove("form_mode_active"),this._removeListeners()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleSuperClose",value:function(e){this._popup.contains(e.target)||this.close()}},{key:"_removeListeners",value:function(){document.removeEventListener("keydown",this._handlerOnEsc),this._form.removeEventListener("click",this._handlerSupClose)}},{key:"_setEventListeners",value:function(){var e=this;this._popup.querySelector(".button_action_close").addEventListener("click",(function(){e.close()})),this._form.addEventListener("click",this._handlerSupClose),document.addEventListener("keydown",this._handlerOnEsc)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==l(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===l(o)?o:String(o)),r)}var o}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return y(e)}(this,e)});function c(e,t){var n,r=e.submitCallback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,t))._submitCallback=r,n._submitButton=n._popup.querySelector(".button_action_create"),n._handlerSubmit=n._handleSubmit.bind(y(n)),n._handlerSubmitOnEnter=n._hanldeSubmitOnEnter.bind(y(n)),n}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._popup.querySelectorAll(".form__input").forEach((function(t){e[t.name]=t.value})),e}},{key:"_reset",value:function(){this._popup.querySelectorAll(".form__input").forEach((function(e){e.value=""}))}},{key:"open",value:function(){f(h(c.prototype),"open",this).call(this),this._setEventListeners(),this._popup.classList.add("form__set_mode_active")}},{key:"close",value:function(){f(h(c.prototype),"close",this).call(this),this._removeListeners(),this._popup.classList.remove("form__set_mode_active"),this._reset()}},{key:"_handleSubmit",value:function(e){e.preventDefault(),this._submitCallback()}},{key:"_hanldeSubmitOnEnter",value:function(e){"Enter"===e.key&&(e.preventDefault(),this._submitButton.classList.contains("button_action_create-inactive")||this._submitCallback())}},{key:"_setEventListeners",value:function(){f(h(c.prototype),"_setEventListeners",this).call(this),this._popup.addEventListener("submit",this._handlerSubmit),document.addEventListener("keydown",this._handlerSubmitOnEnter)}},{key:"_removeListeners",value:function(){f(h(c.prototype),"_removeListeners",this).call(this),this._popup.removeEventListener("submit",this._handlerSubmit),document.removeEventListener("keydown",this._handlerSubmitOnEnter)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(a);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==d(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function _(e,t){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_(e,t)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._image=t._popup.querySelector(".popup__image"),t._title=t._popup.querySelector(".popup__title"),t}return t=c,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;b(g(c.prototype),"open",this).call(this),this._popup.classList.add("popup_mode_active"),this._image.src=n,this._title.textContent=t,this._image.alt=n}},{key:"close",value:function(){b(g(c.prototype),"close",this).call(this),this._popup.classList.remove("popup_mode_active")}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(a);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e,t){var n,r=e.handleCardDelete;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,t)).handleCardDelete=r,n}return t=c,(n=[{key:"open",value:function(){w(C(c.prototype),"open",this).call(this),this._popup.classList.add("form__set_mode_active"),this._setEventListeners()}},{key:"close",value:function(){w(C(c.prototype),"close",this).call(this),this._popup.classList.remove("form__set_mode_active"),this._removeListeners()}},{key:"_setEventListeners",value:function(){w(C(c.prototype),"_setEventListeners",this).call(this),this._popup.querySelector(".button_action_create").addEventListener("click",this.handleCardDelete)}},{key:"_removeListeners",value:function(){w(C(c.prototype),"_removeListeners",this).call(this),this._popup.querySelector(".button_action_create").removeEventListener("click",this.handleCardDelete)}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(a);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==L(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}var q=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"rendererItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var R=function(){function e(t){var n=t.nameSelector,r=t.employmentSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._employmentElement=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,employment:this._employmentElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._employmentElement.textContent=n}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==U(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===U(o)?o:String(o)),r)}var o}var B=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getUserData",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getUserId",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){return e._id}))}},{key:"updateUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:n})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:n})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"likeCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"unlikeCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateProfilePhoto",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x="#place-template",A=document.querySelector("#profile"),V=document.querySelector("#image"),N=(document.querySelector("#confirmation"),document.querySelector("#name-input")),J=document.querySelector("#employment-input"),H=document.querySelector(".button_action_edit"),z=document.querySelector(".button_action_add"),M=document.querySelector("#submit-profile"),F=document.querySelector("#submit-image"),G=new S(".popup"),K=new R({nameSelector:".profile__username",employmentSelector:".profile__useremployment"}),Q=new B({baseUrl:"https://around.nomoreparties.co/v1/web_es_09",headers:{authorization:"e0d01e4f-01c5-4081-b9ff-c482a3e73038","Content-Type":"application/json"}});Q.getUserData().then((function(e){console.log(e),K.setUserInfo(e)})).catch((function(e){console.log(e)}));var W=new q({renderer:function(e){var t=new n({data:e,handleCardClick:function(){G.open(e)},handleDeleteClick:function(){var e=new O({handleCardDelete:function(){var n=t._cardId.toString();Q.deleteCard(n).then((function(e){console.log(e)})).catch((function(e){console.log(e)})),t.updateCard(),e.close()}},"#confirmation");e.open()},handleLike:function(){var e=t.isLiked(),n=t._cardId.toString();e?Q.unlikeCard(n).then((function(e){t.updateLikes(e.likes),console.log(e.likes),console.log(n)})).catch((function(e){console.log(e)})):Q.likeCard(n).then((function(e){t.updateLikes(e.likes),console.log(e.likes),console.log(n)})).catch((function(e){console.log(e)}))}},x);Q.getUserId().then((function(e){t._userId===e&&t.toggleButtonTrash(),t.checkedUserLiked(e)&&t._element.querySelector(".button_action_like").classList.add("button_action_like--active")}));var r=t.generateCard();W.addItem(r)}},".places");Q.getInitialCards().then((function(e){console.log(e),W.rendererItems(e)})).catch((function(e){console.log(e)}));var X=new m({submitCallback:function(){var e=X._getInputValues();Q.updateUserInfo(e).then((function(e){K.setUserInfo(e),X.close(),console.log(e)})).catch((function(e){console.log(e)}))}},"#profile"),Y=new m({submitCallback:function(){var e=Y._getInputValues();console.log(e),Q.addCard(e).then((function(e){var t=new n({data:e,handleCardClick:function(){G.open(e)},handleDeleteClick:function(){var e=new O({handleCardDelete:function(){var n=t._cardId.toString();Q.deleteCard(n).then((function(e){console.log(e)})).catch((function(e){console.log(e)})),t.updateCard(),e.close()}},"#confirmation")},handleLike:function(){var e=t.isLiked(),n=t._cardId.toString();e?Q.unlikeCard(n).then((function(e){t.updateLikes(e.likes),console.log(e.likes),console.log(n)})).catch((function(e){console.log(e)})):Q.likeCard(n).then((function(e){t.updateLikes(e.likes),console.log(e),console.log(n)})).catch((function(e){console.log(e)}))}},x);Q.getUserId().then((function(e){t._userId===e&&t.toggleButtonTrash()}));var r=t.generateCard();W.addItem(r),Y.close()})).catch((function(e){console.log(e)}))}},"#image"),Z=new i({formSelector:".form__set",inputSelector:".form__input",submitButtonSelector:"#submit-profile",inactiveButtonClass:"button_action_create-inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"},A),$=new i({formSelector:".form__set",inputSelector:".form__input",submitButtonSelector:"#submit-image",inactiveButtonClass:"button_action_create-inactive",inputErrorClass:"form__input_type-error",errorClass:"form__input-error_active"},V);H.addEventListener("click",(function(){var e=K.getUserInfo();N.value=e.name,J.value=e.employment,Z.enableValidation(),X.open()})),z.addEventListener("click",(function(){Y.open(),$.enableValidation()})),M.addEventListener("click",(function(e){e.preventDefault(),X._submitCallback()})),F.addEventListener("click",(function(e){e.preventDefault(),Y._submitCallback()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,